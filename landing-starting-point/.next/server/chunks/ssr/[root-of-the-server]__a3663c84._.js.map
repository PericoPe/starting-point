{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/javie/CascadeProjects/Starting%20Point/landing-starting-point/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport Link from \"next/link\";\nimport { useState, useRef, useEffect } from \"react\";\n\n// Mock data para cargas\nconst cargasMock = [\n  {\n    id: 1,\n    origen: \"Buenos Aires, CABA\",\n    destino: \"Córdoba, Capital\",\n    carga: \"Bebidas\",\n    pallets: 24,\n    peso: \"10.000 kg\",\n    fecha: \"25/04/2025\",\n    empresa: \"Coca Cola\",\n    observaciones: \"Carga refrigerada.\"\n  },\n  {\n    id: 2,\n    origen: \"Rosario, Santa Fe\",\n    destino: \"Mendoza, Capital\",\n    carga: \"Alimentos secos\",\n    pallets: 18,\n    peso: \"7.500 kg\",\n    fecha: \"27/04/2025\",\n    empresa: \"Arcor\",\n    observaciones: \"Entrega urgente.\"\n  },\n  {\n    id: 3,\n    origen: \"Bahía Blanca, Bs As\",\n    destino: \"Neuquén, Capital\",\n    carga: \"Materiales de construcción\",\n    pallets: 30,\n    peso: \"13.000 kg\",\n    fecha: \"29/04/2025\",\n    empresa: \"Holcim\",\n    observaciones: \"Se requiere lona.\"\n  }\n];\n\n// Mock data para el perfil y viajes\nconst perfilMock = {\n  nombre: \"Juan Pérez\",\n  reputacion: 4.7,\n  viajes: 18,\n  verificado: true,\n  avatar: \"https://ui-avatars.com/api/?name=Juan+Pérez&background=FF6600&color=fff&size=128\",\n};\n\nconst postulacionesMock = [\n  { id: 1, carga: \"Bebidas\", estado: \"Pendiente\", destino: \"Córdoba, Capital\", fecha: \"25/04/2025\" },\n  { id: 2, carga: \"Alimentos secos\", estado: \"Aceptada\", destino: \"Mendoza, Capital\", fecha: \"27/04/2025\" },\n];\n\nconst enCursoMock = [\n  { id: 3, carga: \"Materiales de construcción\", destino: \"Neuquén, Capital\", fecha: \"29/04/2025\", empresa: \"Holcim\" },\n];\n\nconst historialMock = [\n  { id: 4, carga: \"Electrodomésticos\", destino: \"Salta\", fecha: \"12/03/2025\", empresa: \"Garbarino\", calificacion: 5 },\n  { id: 5, carga: \"Alimentos\", destino: \"La Plata\", fecha: \"01/02/2025\", empresa: \"Coto\", calificacion: 4.5 },\n];\n\nconst docsMock = [\n  { nombre: \"Licencia\", vence: \"2025-08-10\", estado: \"ok\" },\n  { nombre: \"Seguro\", vence: \"2025-05-01\", estado: \"alerta\" },\n];\n\nexport default function Dashboard() {\n  const [cargas] = useState(cargasMock);\n  const [showMenu, setShowMenu] = useState(false);\n  const menuRef = useRef(null);\n  const [postulaciones, setPostulaciones] = useState(postulacionesMock);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedCarga, setSelectedCarga] = useState(null);\n  const [valorPropuesto, setValorPropuesto] = useState('');\n  const [errorValor, setErrorValor] = useState('');\n\n  // Cierra el menú si se hace click fuera\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // Función para abrir el modal de postulación\n  const handlePostularme = (carga) => {\n    setSelectedCarga(carga);\n    setValorPropuesto('');\n    setErrorValor('');\n    setShowModal(true);\n  };\n\n  // Función para enviar postulación\n  const handleEnviarPostulacion = (e) => {\n    e.preventDefault();\n    if (!valorPropuesto || isNaN(Number(valorPropuesto)) || Number(valorPropuesto) <= 0) {\n      setErrorValor('Por favor ingresa un valor válido.');\n      return;\n    }\n    setPostulaciones([\n      ...postulaciones,\n      {\n        id: Date.now(),\n        carga: selectedCarga.carga,\n        destino: selectedCarga.destino,\n        fecha: selectedCarga.fecha,\n        estado: 'Pendiente',\n        valor: Number(valorPropuesto)\n      }\n    ]);\n    setShowModal(false);\n    setSelectedCarga(null);\n    setValorPropuesto('');\n    setErrorValor('');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header tipo landing */}\n      <header className=\"sticky top-0 z-20 bg-white/95 backdrop-blur border-b border-gray-200 shadow-sm w-full\">\n        <nav className=\"max-w-7xl mx-auto flex items-center justify-between px-6 py-4\">\n          <Link href=\"/\" className=\"font-extrabold text-2xl tracking-tight text-orange-500 hover:underline focus:outline-none\">Starting Point</Link>\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/\" className=\"px-4 py-2 rounded-full bg-orange-500 hover:bg-orange-600 text-white font-semibold shadow transition\">Salir</Link>\n          </div>\n        </nav>\n      </header>\n      <main className=\"max-w-7xl mx-auto py-8 px-4 grid grid-cols-1 md:grid-cols-4 gap-8\">\n        {/* Perfil */}\n        <aside className=\"md:col-span-1 bg-white rounded-xl shadow-md p-6 flex flex-col items-center\">\n          <img src={perfilMock.avatar} alt=\"Avatar\" className=\"w-24 h-24 rounded-full mb-3 border-4 border-orange-400\" />\n          <h2 className=\"text-xl font-bold text-gray-900 mb-1\">{perfilMock.nombre}</h2>\n          <span className=\"text-sm text-gray-500 mb-1\">Reputación: <b>{perfilMock.reputacion}</b> ⭐</span>\n          <span className=\"text-sm text-gray-500 mb-2\">Viajes: {perfilMock.viajes}</span>\n          <span className={perfilMock.verificado ? \"text-green-600 font-semibold\" : \"text-red-500 font-semibold\"}>\n            {perfilMock.verificado ? \"✔ Verificado\" : \"No verificado\"}\n          </span>\n        </aside>\n        {/* Panel principal */}\n        <section className=\"md:col-span-3 flex flex-col gap-6\">\n          {/* Oportunidades */}\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\n            <h3 className=\"text-lg font-bold mb-4 text-orange-600\">Oportunidades disponibles</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {cargas.map((carga) => {\n                // Verifica si ya está postulado a esta carga\n                const yaPostulado = postulaciones.some(p => p.carga === carga.carga && p.destino === carga.destino && p.fecha === carga.fecha);\n                return (\n                  <div\n                    key={carga.id}\n                    className={`border rounded-lg p-4 flex flex-col gap-2 shadow-sm transition ${yaPostulado ? 'bg-gray-200 opacity-60' : 'bg-gray-50'}`}\n                  >\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"font-semibold text-gray-800\">{carga.carga}</span>\n                      <span className=\"text-xs text-gray-500\">{carga.fecha}</span>\n                    </div>\n                    <span className=\"text-sm text-gray-600\">Destino: {carga.destino}</span>\n                    <span className=\"text-sm text-gray-600\">Empresa: {carga.empresa}</span>\n                    <span className=\"text-xs text-gray-500\">{carga.observaciones}</span>\n                    <button\n                      className={`mt-2 px-4 py-1 rounded text-sm font-semibold shadow transition ${yaPostulado ? 'bg-gray-400 cursor-not-allowed text-white' : 'bg-orange-500 hover:bg-orange-600 text-white'}`}\n                      onClick={() => !yaPostulado && handlePostularme(carga)}\n                      disabled={yaPostulado}\n                    >\n                      {yaPostulado ? 'Postulado' : 'Postularme'}\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          {/* Mis postulaciones */}\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\n            <h3 className=\"text-lg font-bold mb-4 text-cyan-700\">Mis postulaciones</h3>\n            <ul className=\"divide-y\">\n              {postulaciones.map((p) => (\n                <li key={p.id} className=\"py-2 flex justify-between items-center\">\n                  <span>{p.carga} → {p.destino}</span>\n                  <span className={p.estado === \"Aceptada\" ? \"text-green-600\" : \"text-orange-500\"}>{p.estado}</span>\n                  <span className=\"text-xs text-gray-400\">{p.fecha}</span>\n                  {p.valor && (\n                    <span className=\"text-green-700 font-bold ml-2\">${p.valor.toLocaleString()}</span>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n          {/* Viajes en curso */}\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\n            <h3 className=\"text-lg font-bold mb-4 text-green-700\">Viajes en curso</h3>\n            <ul className=\"divide-y\">\n              {enCursoMock.length === 0 && <li className=\"text-gray-400\">No tienes viajes en curso.</li>}\n              {enCursoMock.map((v) => (\n                <li key={v.id} className=\"py-2 flex justify-between items-center\">\n                  <span>{v.carga} → {v.destino}</span>\n                  <span className=\"text-xs text-gray-400\">{v.fecha}</span>\n                  <span className=\"text-xs text-gray-500\">{v.empresa}</span>\n                  <button className=\"ml-2 bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-xs font-semibold shadow\">Finalizar</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {/* Historial de viajes */}\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\n            <h3 className=\"text-lg font-bold mb-4 text-gray-700\">Historial de viajes</h3>\n            <ul className=\"divide-y\">\n              {historialMock.map((h) => (\n                <li key={h.id} className=\"py-2 flex justify-between items-center\">\n                  <span>{h.carga} → {h.destino}</span>\n                  <span className=\"text-xs text-gray-400\">{h.fecha}</span>\n                  <span className=\"text-xs text-gray-500\">{h.empresa}</span>\n                  <span className=\"text-yellow-500\">{h.calificacion} ⭐</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {/* Documentación y alertas */}\n          <div className=\"bg-white rounded-xl shadow-md p-6\">\n            <h3 className=\"text-lg font-bold mb-4 text-red-700\">Documentación y alertas</h3>\n            <ul className=\"divide-y\">\n              {docsMock.map((doc, i) => (\n                <li key={i} className=\"py-2 flex justify-between items-center\">\n                  <span>{doc.nombre}</span>\n                  <span className={doc.estado === \"ok\" ? \"text-green-600\" : \"text-red-500 font-bold\"}>{doc.estado === \"ok\" ? \"Vigente\" : \"Pronto a vencer\"}</span>\n                  <span className=\"text-xs text-gray-400\">Vence: {doc.vence}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      </main>\n      {/* Modal de postulación */}\n      {showModal && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 max-w-sm w-full flex flex-col items-center relative\">\n            <button className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-700\" onClick={() => setShowModal(false)}>&times;</button>\n            <h2 className=\"text-xl font-bold text-gray-800 mb-2\">Postularse a {selectedCarga?.carga}</h2>\n            <p className=\"mb-4 text-sm text-gray-600\">Destino: {selectedCarga?.destino}</p>\n            <form className=\"w-full flex flex-col gap-3\" onSubmit={handleEnviarPostulacion}>\n              <label className=\"text-sm font-medium text-gray-700\">Valor propuesto ($)</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                className=\"border border-gray-300 rounded-lg px-4 py-2\"\n                value={valorPropuesto}\n                onChange={e => setValorPropuesto(e.target.value)}\n                placeholder=\"Ej: 1500000\"\n                required\n              />\n              {errorValor && <span className=\"text-red-500 text-xs\">{errorValor}</span>}\n              <button type=\"submit\" className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-semibold shadow mt-2\">Enviar postulación</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}